//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FMolinaPruebaSCISAEntities : DbContext
    {
        public FMolinaPruebaSCISAEntities()
            : base("name=FMolinaPruebaSCISAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Doctor> Doctor { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
    
        public virtual int DoctorDelete(Nullable<int> idDoctor)
        {
            var idDoctorParameter = idDoctor.HasValue ?
                new ObjectParameter("IdDoctor", idDoctor) :
                new ObjectParameter("IdDoctor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorDelete", idDoctorParameter);
        }
    
        public virtual ObjectResult<DoctorGetAll_Result> DoctorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorGetAll_Result>("DoctorGetAll");
        }
    
        public virtual ObjectResult<DoctorGetById_Result> DoctorGetById(Nullable<int> idDoctor)
        {
            var idDoctorParameter = idDoctor.HasValue ?
                new ObjectParameter("IdDoctor", idDoctor) :
                new ObjectParameter("IdDoctor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorGetById_Result>("DoctorGetById", idDoctorParameter);
        }
    
        public virtual ObjectResult<PacienteGetAll_Result> PacienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PacienteGetAll_Result>("PacienteGetAll");
        }
    
        public virtual ObjectResult<PacienteGetById_Result> PacienteGetById(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PacienteGetById_Result>("PacienteGetById", idPacienteParameter);
        }
    
        public virtual ObjectResult<EspecialidadGetAll_Result> EspecialidadGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EspecialidadGetAll_Result>("EspecialidadGetAll");
        }
    
        public virtual ObjectResult<CitaGetAll_Result> CitaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaGetAll_Result>("CitaGetAll");
        }
    
        public virtual ObjectResult<CitaGetById_Result> CitaGetById(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaGetById_Result>("CitaGetById", idCitaParameter);
        }
    
        public virtual ObjectResult<GetByEmail_Result> GetByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByEmail_Result>("GetByEmail", emailParameter);
        }
    
        public virtual int AgendarCita(Nullable<int> idDoctor, Nullable<int> idPaciente, string fecha, string observaciones, string hora)
        {
            var idDoctorParameter = idDoctor.HasValue ?
                new ObjectParameter("IdDoctor", idDoctor) :
                new ObjectParameter("IdDoctor", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgendarCita", idDoctorParameter, idPacienteParameter, fechaParameter, observacionesParameter, horaParameter);
        }
    
        public virtual int UpdateCita(Nullable<int> idCita, Nullable<int> idDoctor, Nullable<int> idPaciente, string fecha, string observaciones, string hora)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idDoctorParameter = idDoctor.HasValue ?
                new ObjectParameter("IdDoctor", idDoctor) :
                new ObjectParameter("IdDoctor", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCita", idCitaParameter, idDoctorParameter, idPacienteParameter, fechaParameter, observacionesParameter, horaParameter);
        }
    
        public virtual int DeleteCita(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCita", idCitaParameter);
        }
    
        public virtual int PacienteDelete(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteDelete", idPacienteParameter);
        }
    
        public virtual int DoctorAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string sexo, string email, string password, string telefono, Nullable<int> idEspecialidad, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, emailParameter, passwordParameter, telefonoParameter, idEspecialidadParameter, imagenParameter);
        }
    
        public virtual int DoctorUpdate(Nullable<int> idDoctor, string nombre, string apellidoPaterno, string apellidoMaterno, string sexo, string email, string password, string telefono, Nullable<int> idEspecialidad, byte[] imagen)
        {
            var idDoctorParameter = idDoctor.HasValue ?
                new ObjectParameter("IdDoctor", idDoctor) :
                new ObjectParameter("IdDoctor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorUpdate", idDoctorParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, emailParameter, passwordParameter, telefonoParameter, idEspecialidadParameter, imagenParameter);
        }
    
        public virtual int PacienteAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string sexo, string nSS, string email, string password, string telefono, string direccion, string fechaNacimiento, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nSSParameter = nSS != null ?
                new ObjectParameter("NSS", nSS) :
                new ObjectParameter("NSS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, nSSParameter, emailParameter, passwordParameter, telefonoParameter, direccionParameter, fechaNacimientoParameter, imagenParameter);
        }
    
        public virtual int PacienteUpdate(Nullable<int> idPaciente, string nombre, string apellidoPaterno, string apellidoMaterno, string sexo, string nSS, string email, string password, string telefono, string direccion, string fechaNacimiento, byte[] imagen)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nSSParameter = nSS != null ?
                new ObjectParameter("NSS", nSS) :
                new ObjectParameter("NSS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteUpdate", idPacienteParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, nSSParameter, emailParameter, passwordParameter, telefonoParameter, direccionParameter, fechaNacimientoParameter, imagenParameter);
        }
    }
}
